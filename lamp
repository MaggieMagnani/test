-- Verifica se o Plethora está instalado (precisa de redstone_integrator)
if not peripheral.find("redstone_integrator") then
  print(" Nenhum redstone integrator encontrado. Verifique os cabos e periféricos.")
  return
end

-- Obter todos os redstone integrators conectados
local integradores = {}
for _, nome in ipairs(peripheral.getNames()) do
  if peripheral.getType(nome) == "redstone_integrator" then
    table.insert(integradores, peripheral.wrap(nome))
  end
end

-- Lados possíveis das lâmpadas
local lados = { "top", "bottom", "left", "right", "front", "back" }

-- Ativa várias saídas aleatórias em um integrador
local function piscar(integrador)
  local quantidade = math.random(1, 3) -- pode acender até 3 lados por vez

  local usados = {}
  for i = 1, quantidade do
    local lado
    repeat
      lado = lados[math.random(#lados)]
    until not usados[lado]
    usados[lado] = true
    integrador.setOutput(lado, true)
  end

  sleep(math.random(1, 5) / 10)  -- entre 0.1s e 0.5s

  -- Apagar todas as saídas usadas
  for lado, _ in pairs(usados) do
    integrador.setOutput(lado, false)
  end
end

-- Loop principal com delay aleatório entre cada integrador
while true do
  for _, integrador in ipairs(integradores) do
    -- Usar função paralela (opcionalmente)
    piscar(integrador)
    sleep(0.05 + math.random() * 0.1) -- pausa rápida entre cada um
  end
end
