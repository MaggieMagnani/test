--= OLHO EMOCIONAL ULTRA REALISTA =--
-- Versão 3.0 - Corrigida e Otimizada

--= CONFIGURAÇÃO INICIAL =--
local mon = peripheral.find("monitor")
if not mon then 
    print("Monitores não encontrados!")
    return 
end

mon.setTextScale(0.5)
local w, h = mon.getSize()
local centerX, centerY = math.floor(w/2), math.floor(h/2)

--= FUNÇÕES ÚTEIS =--
local function lerp(a, b, t) return a + (b - a) * t end
local function weightedRandom(weights)
    local total = 0
    for _, w in pairs(weights) do total = total + w end
    local r = math.random(total)
    local sum = 0
    for k, w in pairs(weights) do
        sum = sum + w
        if r <= sum then return k end
    end
end

--= SISTEMA DE EMOÇÕES =--
local EMOTIONS = {
    CALMO = {
        blink = 0.003,
        duration = {300, 500},
        iris = {color="rainbow", size=3.5},
        sclera = {color=colors.white, redness=0},
        effects = {bg="none", particles="none"}
    },
    TRISTE = {
        blink = 0.01,
        duration = {250, 350},
        iris = {color=colors.blue, size=4.2},
        sclera = {color=colors.lightBlue, redness=0.1},
        effects = {bg="fog", particles="tears", intensity=0.7}
    },
    CHORANDO = {
        blink = 0.005,
        duration = {500, 700},
        iris = {color=colors.blue, size=4.5},
        sclera = {color=colors.lightBlue, redness=0.3},
        effects = {bg="storm", particles="waterfall", intensity=1.0}
    },
    EMBRIAGADO = {
        blink = 0.02,
        duration = {400, 600},
        iris = {color="swirling", size=3.8},
        sclera = {color=colors.red, redness=0.6},
        effects = {bg="spiral", particles="floaters", intensity=0.8}
    }
}

--= ESTADO DO OLHO =--
local eye = {
    emotion = "CALMO",
    timer = 300,
    blink = {progress=0, target=0},
    look = {x=0, y=0, targetX=0, targetY=0},
    particles = {
        tears = {},
        floaters = {}
    },
    physics = {sway=0, wobble=0},
    waterLevel = 0
}

--= INICIALIZAÇÃO DE PARTÍCULAS =--
for i = 1, 150 do
    eye.particles.tears[i] = {
        active = false,
        x = 0, y = 0,
        size = 1,
        speed = 1,
        color = colors.blue,
        life = 0
    }
end

for i = 1, 80 do
    eye.particles.floaters[i] = {
        x = math.random(-w, w),
        y = math.random(-h, h),
        color = ({colors.green, colors.yellow, colors.pink})[math.random(3)],
        size = math.random(1, 3),
        speed = math.random(20, 80)/100
    }
end

--= FUNÇÕES DE DESENHO =--
local function drawPixel(x, y, color)
    mon.setBackgroundColor(color)
    mon.setCursorPos(centerX + x, centerY + y)
    mon.write(" ")
end

local function drawEllipse(x, y, rx, ry, color)
    for dy = -ry, ry do
        for dx = -rx, rx do
            if (dx*dx)/(rx*rx) + (dy*dy)/(ry*ry) <= 1 then
                drawPixel(x + dx, y + dy, color)
            end
        end
    end
end

--= SISTEMA DE LÁGRIMAS =--
local function updateTears(dt)
    local e = EMOTIONS[eye.emotion]
    if not e.effects.particles:find("tear") then return end
    
    local intensity = e.effects.intensity or 0.5
    local spawnRate = lerp(0.5, 1.5, intensity) * dt
    
    for _, tear in ipairs(eye.particles.tears) do
        if tear.active then
            tear.y = tear.y + tear.speed * 60 * dt
            tear.life = tear.life - dt
            if tear.y > h/2 or tear.life <= 0 then
                tear.active = false
            end
        elseif math.random() < spawnRate then
            tear.active = true
            tear.x = math.random(-25, 25)
            tear.y = -15 - math.random(5)
            tear.size = math.random(1, 4)
            tear.speed = math.random(15, 35)/10 * intensity
            tear.life = math.random(2, 5)
            tear.color = ({colors.blue, colors.lightBlue, colors.cyan})[math.random(3)]
        end
    end
end

local function drawTears()
    local e = EMOTIONS[eye.emotion]
    if not e.effects.particles:find("tear") then return end
    
    for _, tear in ipairs(eye.particles.tears) do
        if tear.active then
            -- Lágrima principal
            drawPixel(tear.x, tear.y, tear.color)
            
            -- Cauda da lágrima
            for i = 1, tear.size do
                drawPixel(tear.x, tear.y - i, tear.color)
            end
            
            -- Reflexo
            if math.random() < 0.3 then
                drawPixel(tear.x + math.random(-1,1), tear.y, colors.white)
            end
        end
    end
    
    -- Olho marejado
    if e.effects.intensity > 0.5 then
        for y = -10, -5 do
            for x = -20, 20 do
                if math.random() < 0.02 * e.effects.intensity then
                    drawPixel(x, y, colors.lightBlue)
                end
            end
        end
    end
end

--= EFEITOS DE EMBRIAGUEZ =--
local function updateFloat(dt)
    if eye.emotion ~= "EMBRIAGADO" then return end
    
    for _, floater in ipairs(eye.particles.floaters) do
        floater.x = floater.x + math.random() * 0.5 - 0.25
        floater.y = floater.y + floater.speed
        if floater.y > h/2 + 5 then
            floater.y = -h/2 - 5
            floater.x = math.random(-w/2, w/2)
        end
    end
end

local function drawFloat()
    if eye.emotion ~= "EMBRIAGADO" then return end
    
    for _, floater in ipairs(eye.particles.floaters) do
        local dist = math.sqrt(floater.x^2 + floater.y^2)
        if dist > w/3 then
            drawEllipse(floater.x, floater.y, floater.size, floater.size, floater.color)
        end
    end
end

--= EFEITO ESPIRAL =--
local spiral = {angle=0}

local function drawSpiral()
    spiral.angle = (spiral.angle + 0.05) % (math.pi*2)
    local layers = 5
    local maxRadius = math.max(w,h)/2 + 10
    
    for l = 1, layers do
        local radius = maxRadius - l*2
        local steps = radius*2
        local color = ({colors.purple, colors.magenta, colors.pink})[l%3+1]
        
        for i = 0, steps do
            local a = spiral.angle + (i/steps)*math.pi*2
            local x = math.floor(math.cos(a)*radius)
            local y = math.floor(math.sin(a)*radius)
            
            if i%(3+l) == 0 then
                drawPixel(x, y, color)
            end
        end
    end
end

--= LOOP PRINCIPAL =--
local lastTime = os.epoch("utc")
while true do
    local currentTime = os.epoch("utc")
    local dt = (currentTime - lastTime)/1000
    lastTime = currentTime
    
    -- Atualizar estado
    eye.timer = eye.timer - 1
    if eye.timer <= 0 then
        eye.emotion = weightedRandom({
            CALMO=60, TRISTE=15, CHORANDO=10, EMBRIAGADO=15
        })
        eye.timer = math.random(
            EMOTIONS[eye.emotion].duration[1],
            EMOTIONS[eye.emotion].duration[2]
        )
    end
    
    -- Atualizar sistemas
    updateTears(dt)
    updateFloat(dt)
    
    -- Desenhar
    mon.setBackgroundColor(colors.black)
    mon.clear()
    
    if EMOTIONS[eye.emotion].effects.bg == "spiral" then
        drawSpiral()
    end
    
    -- [Aqui viria o desenho do olho principal]
    
    drawTears()
    drawFloat()
    
    sleep(0.05)
end
